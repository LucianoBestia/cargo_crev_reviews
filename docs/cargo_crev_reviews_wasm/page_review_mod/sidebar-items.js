initSidebarItems({"fn":[["button_review_edit_on_click","send requests in json_rpc"],["button_review_save_on_click","send requests in json_rpc"],["page_review_edit","the code for processing the page review_edit the data and html are already in static Mutex REVIEW_SHOW_DATA"],["page_review_new","fetch and inject HTML fragment into index.html/div_for_wasm_html_injecting"],["page_review_show","the code for processing the page review_show the data and html are already in static Mutex REVIEW_SHOW_DATA"],["review_exist_next_attribute","if the attribute is like `data-wb_checked_th_none=\"checked\" checked=\"checked\"`, starts with `wb_` (web browser bool) Execute the method and store in `next_attribute_exist` The next attribute will exist or not because of this bool."],["review_replace_next_attribute","if the `next_attribute_replace` is not None then replace attribute with `next_attribute_replace` if attribute starts with data-wt_ it is a replace command. Like: data-wt_width=“width” width=“90” the attribute value is the name of the next attribute, just for security Execute the method and save the result in `next_attribute_replace`, don’t push attribute to string"],["review_replace_next_text_node","if the comment is like , starts with `wt_` (web browser text) Execute the method and save the result in `next_text_node_replace`. On the next text node it will use this value."]],"struct":[["REVIEW_SHOW_DATA","mutable static, because it is hard to pass variables around with on_click events"]]});