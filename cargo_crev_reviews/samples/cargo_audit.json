{
    "database": {
        "advisory-count": 384,
        "last-commit": "dcf8fb2a44b0d2443c37306a94111fefeb0ff56b",
        "last-updated": "2021-12-27T19:44:42Z"
    },
    "lockfile": {
        "dependency-count": 259
    },
    "settings": {
        "target_arch": null,
        "target_os": null,
        "severity": null,
        "ignore": [],
        "informational_warnings": ["unmaintained"],
        "package_scope": null
    },
    "vulnerabilities": {
        "found": true,
        "count": 3,
        "list": [{
            "advisory": {
                "id": "RUSTSEC-2020-0159",
                "package": "chrono",
                "title": "Potential segfault in `localtime_r` invocations",
                "description": "### Impact\n\nUnix-like operating systems may segfault due to dereferencing a dangling pointer in specific circumstances. This requires an environment variable to be set in a different thread than the affected functions. This may occur without the user's knowledge, notably in a third-party library.\n\n### Workarounds\n\nNo workarounds are known.\n\n### References\n\n- [time-rs/time#293](https://github.com/time-rs/time/issues/293)",
                "date": "2020-11-10",
                "aliases": [],
                "references": [],
                "collection": "crates",
                "categories": ["code-execution", "memory-corruption"],
                "keywords": ["segfault"],
                "cvss": null,
                "informational": null,
                "url": "https://github.com/chronotope/chrono/issues/499",
                "yanked": false
            },
            "versions": {
                "patched": [],
                "unaffected": []
            },
            "affected": null,
            "package": {
                "name": "chrono",
                "version": "0.4.19",
                "source": "registry+https://github.com/rust-lang/crates.io-index",
                "checksum": "670ad68c9088c2a963aaa298cb369688cf3f9465ce5e2d4ca10e6e0098a1ce73",
                "dependencies": [{
                    "name": "libc",
                    "version": "0.2.105",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "num-integer",
                    "version": "0.1.44",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "num-traits",
                    "version": "0.2.14",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "time",
                    "version": "0.1.44",
                    "source": null
                }, {
                    "name": "winapi",
                    "version": "0.3.9",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }],
                "replace": null
            }
        }, {
            "advisory": {
                "id": "RUSTSEC-2020-0071",
                "package": "time",
                "title": "Potential segfault in the time crate",
                "description": "### Impact\n\nUnix-like operating systems may segfault due to dereferencing a dangling pointer in specific circumstances. This requires an environment variable to be set in a different thread than the affected functions. This may occur without the user's knowledge, notably in a third-party library.\n\nThe affected functions from time 0.2.7 through 0.2.22 are:\n\n- `time::UtcOffset::local_offset_at`\n- `time::UtcOffset::try_local_offset_at`\n- `time::UtcOffset::current_local_offset`\n- `time::UtcOffset::try_current_local_offset`\n- `time::OffsetDateTime::now_local`\n- `time::OffsetDateTime::try_now_local`\n\nThe affected functions in time 0.1 (all versions) are:\n\n- `at`\n- `at_utc`\n- `now`\n\nNon-Unix targets (including Windows and wasm) are unaffected.\n\n### Patches\n\nPending a proper fix, the internal method that determines the local offset has been modified to always return `None` on the affected operating systems. This has the effect of returning an `Err` on the `try_*` methods and `UTC` on the non-`try_*` methods.\n\nUsers and library authors with time in their dependency tree should perform `cargo update`, which will pull in the updated, unaffected code.\n\nUsers of time 0.1 do not have a patch and should upgrade to an unaffected version: time 0.2.23 or greater or the 0.3 series.\n\n### Workarounds\n\nNo workarounds are known.\n\n### References\n\ntime-rs/time#293",
                "date": "2020-11-18",
                "aliases": ["CVE-2020-26235"],
                "references": [],
                "collection": "crates",
                "categories": ["code-execution", "memory-corruption"],
                "keywords": ["segfault"],
                "cvss": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "informational": null,
                "url": "https://github.com/time-rs/time/issues/293",
                "yanked": false
            },
            "versions": {
                "patched": [">=0.2.23"],
                "unaffected": ["=0.2.0", "=0.2.1", "=0.2.2", "=0.2.3", "=0.2.4", "=0.2.5", "=0.2.6"]
            },
            "affected": {
                "arch": [],
                "os": ["linux", "unknown", "unknown", "android", "ios", "macos", "netbsd", "openbsd", "bitrig", "freebsd"],
                "functions": {
                    "time::OffsetDateTime::now_local": ["<0.2.23"],
                    "time::OffsetDateTime::try_now_local": ["<0.2.23"],
                    "time::UtcOffset::current_local_offset": ["<0.2.23"],
                    "time::UtcOffset::local_offset_at": ["<0.2.23"],
                    "time::UtcOffset::try_current_local_offset": ["<0.2.23"],
                    "time::UtcOffset::try_local_offset_at": ["<0.2.23"],
                    "time::at": [">=0.1.0, <0.2.0"],
                    "time::at_utc": [">=0.1.0, <0.2.0"],
                    "time::now": [">=0.1.0, <0.2.0"]
                }
            },
            "package": {
                "name": "time",
                "version": "0.1.44",
                "source": "registry+https://github.com/rust-lang/crates.io-index",
                "checksum": "6db9e6914ab8b1ae1c260a4ae7a49b6c5611b40328a735b21862567685e73255",
                "dependencies": [{
                    "name": "libc",
                    "version": "0.2.105",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "wasi",
                    "version": "0.10.0+wasi-snapshot-preview1",
                    "source": null
                }, {
                    "name": "winapi",
                    "version": "0.3.9",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }],
                "replace": null
            }
        }, {
            "advisory": {
                "id": "RUSTSEC-2021-0124",
                "package": "tokio",
                "title": "Data race when sending and receiving after closing a `oneshot` channel",
                "description": "If a `tokio::sync::oneshot` channel is closed (via the\n[`oneshot::Receiver::close`] method), a data race may occur if the\n`oneshot::Sender::send` method is called while the corresponding\n`oneshot::Receiver` is `await`ed or calling `try_recv`.\n\nWhen these methods are called concurrently on a closed channel, the two halves\nof the channel can concurrently access a shared memory location, resulting in a\ndata race. This has been observed to [cause memory corruption][corruption].\n\nNote that the race only occurs when **both** halves of the channel are used\nafter the `Receiver` half has called `close`. Code where `close` is not used, or where the\n`Receiver` is not `await`ed and `try_recv` is not called after calling `close`,\nis not affected.\n\nSee [tokio#4225][issue] for more details.\n\n[corruption]: https://github.com/tokio-rs/tokio/issues/4225#issuecomment-967434847\n[issue]: https://github.com/tokio-rs/tokio/issues/4225\n[`oneshot::Receiver::close`]: https://docs.rs/tokio/1.14.0/tokio/sync/oneshot/struct.Receiver.html#method.close",
                "date": "2021-11-16",
                "aliases": [],
                "references": [],
                "collection": "crates",
                "categories": ["memory-corruption", "thread-safety"],
                "keywords": ["race condition"],
                "cvss": null,
                "informational": null,
                "url": "https://github.com/tokio-rs/tokio/issues/4225",
                "yanked": false
            },
            "versions": {
                "patched": [">=1.8.4, <1.9.0", ">=1.13.1"],
                "unaffected": ["<0.1.14"]
            },
            "affected": {
                "arch": [],
                "os": [],
                "functions": {
                    "tokio::sync::oneshot::Receiver::close": ["<=1.13.0, >=0.1.14"]
                }
            },
            "package": {
                "name": "tokio",
                "version": "1.12.0",
                "source": "registry+https://github.com/rust-lang/crates.io-index",
                "checksum": "c2c2416fdedca8443ae44b4527de1ea633af61d8f7169ffa6e72c5b53d24efcc",
                "dependencies": [{
                    "name": "autocfg",
                    "version": "1.0.1",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "bytes",
                    "version": "1.1.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "libc",
                    "version": "0.2.105",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "memchr",
                    "version": "2.4.1",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "mio",
                    "version": "0.7.14",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "num_cpus",
                    "version": "1.13.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "pin-project-lite",
                    "version": "0.2.7",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "winapi",
                    "version": "0.3.9",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }],
                "replace": null
            }
        }]
    },
    "warnings": {
        "unmaintained": [{
            "kind": "unmaintained",
            "package": {
                "name": "serde_cbor",
                "version": "0.11.2",
                "source": "registry+https://github.com/rust-lang/crates.io-index",
                "checksum": "2bef2ebfde456fb76bbcf9f59315333decc4fda0b2b44b420243c11e0f5ec1f5",
                "dependencies": [{
                    "name": "half",
                    "version": "1.8.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }, {
                    "name": "serde",
                    "version": "1.0.130",
                    "source": "registry+https://github.com/rust-lang/crates.io-index"
                }],
                "replace": null
            },
            "advisory": {
                "id": "RUSTSEC-2021-0127",
                "package": "serde_cbor",
                "title": "serde_cbor is unmaintained",
                "description": "The `serde_cbor` crate is unmaintained. The author has archived the github repository.\n\nAlternatives proposed by the author:\n\n * [`ciborium`](https://crates.io/crates/ciborium)\n * [`minicbor`](https://crates.io/crates/minicbor)",
                "date": "2021-08-15",
                "aliases": [],
                "references": [],
                "collection": "crates",
                "categories": [],
                "keywords": [],
                "cvss": null,
                "informational": "unmaintained",
                "url": "https://github.com/pyfisch/cbor",
                "yanked": false
            },
            "versions": {
                "patched": [],
                "unaffected": []
            }
        }]
    }
}