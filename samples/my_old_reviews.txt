my new review:

old_ reviews


aho-corasick 0.7.10
strong
2020-04-25
LucianoBestia
none, low

aho-corasick is written by BurntSushi.

He is a prominent member of rust-lang and rust nursery teams and more.

The crate comes from:

https://github.com/burntsushi



atty 0.2.14
strong
2020-04-25
LucianoBestia
medium, medium
atty is a micro.crate with little code and no dependency.

The code looks fine to me.

I trust it.


atty 0.2.13
strong
2020-04-25
LucianoBestia
medium, medium
atty is a micro.crate with little code and no dependency.

The code looks fine.

I trust it.


bitflags 1.2.1
positive
2020-04-25
LucianoBestia
medium, low
bitflags code is a big macro. no dependency.

It looks basic and low. It has a lot of contributors.

So I guess I have to trust them.


bumpalo 3.2.1
strong
2020-04-25
LucianoBestia
none, low
Bumpalo and dodrio are written by fitzgen.

I trust fitzgen for the basic libraries bumpalo and dodrio for rust + wasm.

He is a member of the official wasm working group for rust at mozilla.

The crate comes from:

https://www.rust-lang.org/governance/wgs/wasm
https://fitzgeraldnick.com/
https://github.com/fitzgen


bumpalo 2.6.0
strong
2020-04-26
LucianoBestia
none, low
Bumpalo and dodrio are written by fitzgen.

I trust fitzgen for the basic libraries bumpalo and dodrio for rust + wasm.

He is a member of the official wasm working group for rust at mozilla.

The crate comes from:

https://www.rust-lang.org/governance/wgs/wasm
https://fitzgeraldnick.com/
https://github.com/fitzgen


chrono 0.4.9
strong
2020-04-25
LucianoBestia
none, low
chrono is de facto standard time library for Rust.

The standard libraries are meant to be trusted.

The crate comes from:

https://github.com/chronotope/chrono


clap 2.33.0
strong
2020-04-25
LucianoBestia
none, low
clap is de facto standard CLI library for Rust.

The standard libraries are meant to be trusted.

The crate comes from:

https://github.com/clap-rs


codetour_export_to_md 2020.605.1303
strong
2020-06-11
LucianoBestia
high, high
I am the author of codetour_export_to_md.

It is a binary for use in development time.

It reads readonly all the .tour and some .rs files from the Rust project folder.

It creates one .md file per .tour file.

I think it can be trusted.




codetour_export_to_md 2020.512.2010
strong
2020-06-11
LucianoBestia
high, high
I am the author of codetour_export_to_md.

It is a binary for use in development time.

It reads readonly all the .tour and some .rs files from the Rust project folder.

It creates one .md file per .tour file.

I think it can be trusted.


codetour_export_to_md 2020.512.1944
strong
2020-06-11
LucianoBestia
high, high
I am the author of codetour_export_to_md.

It is a binary for use in development time.

It reads readonly all the .tour and some .rs files from the Rust project folder.

It creates one .md file per .tour file.

I think it can be trusted.


codetour_export_to_md 2020.512.1933
strong
2020-06-11
LucianoBestia
high, high
I am the author of codetour_export_to_md.

It is a binary for use in development time.

It reads readonly all the .tour and some .rs files from the Rust project folder.

It creates one .md file per .tour file.

I think it can be trusted.


codetour_export_to_md 0.1.29
strong
2020-06-11
LucianoBestia
high, high
I am the author of codetour_export_to_md.

It is a binary for use in development time.

It reads readonly all the .tour and some .rs files from the Rust project folder.

It creates one .md file per .tour file.

I think it can be trusted.


console_error_panic_hook 0.1.6
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

console_error_panic_hook is the absolute basic core crate for rust + wasm.

The crate comes from the

The Rust Project Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io


dev_bestia_cargo_completion 2021.817.1148
strong
2021-08-17
LucianoBestia
high, high
I am the author of dev_bestia_cargo_completion.
This is a simple binary crate for enabling bash auto-completion for the cargo and cargo auto commands. It hust receives argumetns and env. variables from the bash completion process. It returns text on the stdout. It calls the automation_scripts_rs for the cargo auto command. It also just return text on stdout.

It does not use any of these potentially harmfull operations:

unsafe, FFI, asm!, file-read, file-write, network-access, build.rs, macro_rules, proc_macro


filetime 0.1.15
strong
2020-04-25
LucianoBestia
none, low
filetime is written by alexcrichton.

I trust alexcrichton for the basic libraries for rust.

He is a prominent member of rust-lang and rust nursery teams and more.

The crate comes from:

https://github.com/alexcrichton


getrandom 0.1.14
strong
2020-04-25
LucianoBestia
none, low
rand is de facto standard random library for Rust.

The standard libraries are meant to be trusted.

It contains crates: rand_core, rand_hc, rand_chacha, rand_pcg and others.

The crate comes from:

https://github.com/rust-random/rand


glob 0.3.0
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

glob is part of the rust-lang-nursery project.

Those are candidates for the rust standard "library crates".

So I suppose I have to trust them.

The crate comes from the

https://github.com/rust-lang-nursery


itoa 0.4.5
strong
2020-04-25
LucianoBestia
none, low
itoa is written by dtolnay.

I trust dtolnay for the basic library quote rust macros.

He is a prominent member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/dtolnay/quote


js-sys 0.3.37
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

This is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io


libc 0.2.69
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

libc is the absolute basic core crate for rust language.

The crate comes from the

The Rust Project Developers,
https://github.com/rust-lang
https://www.rust-lang.org/


lmake_cargo_toml_to_md 0.5.4
strong
2020-07-15
LucianoBestia
high, high
I am the author of lmake_cargo_toml_to_md.

Includes cargo.toml data into md.

It is useful prior to run cargo doc to generate the documentation.

The code is small and easy to review. It can be trusted.

NO: unsafe, FFI, asm!, network-access, build.rs, macro_rules, unmaintained.

YES: file-read: md files, file-write: rs files.


lmake_lines_of_code 2020.613.1337
strong
2020-06-13
LucianoBestia
high, high
I am the author of lmake_lines_of_code.

It reads all the *.rs files in a Rust Workspace or Project.

It modifies README.md, if it contains special comment-delimiters.

It include the result there.

The result markdown is printed to standard output.

There can be copy/paste into README.md manually.

I think it can be trusted.



lmake_lines_of_code 2020.607.1321
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_lines_of_code.

It reads only all the *.rs files.

The result is markdown to copy/paste into readme.md.

And returns to standard output in this version.

I think it can be trusted.



lmake_lines_of_code 1.1.5
strong
2020-07-27
LucianoBestia
high, high
I am the author of lmake_lines_of_code.

It reads all the *.rs files in a Rust Workspace or Project.

The result markdown table and badges is printed to standard output.

There can be copy/paste into README.md manually.

It includes the badges into README.md, if contains special comment-markers.

I think it can be trusted.

YES: file-read: all *.rs files, file-write: README.md, executes process "git remote -v"

NO: unsafe, FFI, asm!, build.rs, macro_rules, unmaintained, network-access



lmake_md_to_doc_comments 0.5.4
strong
2020-07-15
LucianoBestia
high, high
I am the author of lmake_md_to_doc_comments.

Includes segments of md files into rs files as doc comments for one Rust project.

It is useful prior to run cargo doc to generate the documentation.

The code is small and easy to review. It can be trusted.

NO: unsafe, FFI, asm!, network-access, build.rs, macro_rules, unmaintained.

YES: file-read: md files, file-write: rs files.



lmake_readme 0.5.4
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_readme.

It reads cargo.toml, readme.md.

Writes into readme.md, main.rs or lib.rs or other .rs files with included placeholders.

I think it can be trusted.



lmake_readme 0.5.2
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_readme.

It reads cargo.toml, readme.md.

Writes into readme.md, main.rs or lib.rs or other .rs files with included placeholders.

I think it can be trusted.



lmake_readme 0.5.1
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_readme.

It reads cargo.toml, readme.md.

Writes into readme.md, main.rs or lib.rs or other .rs files with included placeholders.

I think it can be trusted




lmake_readme 0.4.0
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_readme.

It reads cargo.toml, readme.md.

Writes into readme.md, main.rs or lib.rs or other .rs files with included placeholders.

I think it can be trusted.



lmake_semver 0.1.6
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_semver.

It reads and writes to cargo.toml.

It increases the semver version number.

I think it can be trusted.



lmake_semver 0.1.1
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_semver.

It reads and writes to cargo.toml.

It increases the semver version number.

I think it can be trusted.



lmake_version_from_date 0.3.38
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_version_from_date.

It reads and writes to cargo.toml.

It writes into the version number the date and time now.

I think it can be trusted.



lmake_version_from_date 0.3.32
strong
2020-06-12
LucianoBestia
high, high
I am the author of lmake_version_from_date.

It reads and writes to cargo.toml.

It writes into the version number the date and time now.

I think it can be trusted.

memchr 2.3.3
strong
2020-04-25
LucianoBestia
none, low
memchr is written by BurntSushi.

He is a prominent member of rust-lang and rust nursery teams and more.

The crate comes from:

https://github.com/burntsushi
proc-macro2 1.0.10
strong
2020-04-25
LucianoBestia
none, low
proc-macro2 are written by alexcrichton.

I trust alexcrichton for the basic libraries for rust.

He is a prominent member of rust-lang and rust nursery teams and more.

The crate comes from:

https://github.com/alexcrichton/proc-macro2
proc-macro2 1.0.4
strong
2020-04-25
LucianoBestia
none, low
proc-macro2 is written by alexcrichton.

I trust alexcrichton for the basic libraries for rust.

He is a prominent member of rust-lang and rust nursery teams and more.

The crate comes from:

https://github.com/alexcrichton
qrcode53bytes 1.0.0
strong
2020-06-13
LucianoBestia
high, high
I am the author of qrcode53bytes.

Works in wasm.

That should be safe.

I think it can be trusted.

quote 1.0.3
strong
2020-04-25
LucianoBestia
none, low
Quote is written by dtolnay.

I trust dtolnay for the basic library quote rust macros.

He is a member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/dtolnay/quote
rand 0.7.3
strong
2020-04-25
LucianoBestia
none, low
rand is de facto standard random library for Rust.

The standard libraries are meant to be trusted.

It contains crates: rand_core, rand_hc, rand_chacha, rand_pcg and others.

The crate comes from:

https://github.com/rust-random/rand
rand_chacha 0.2.2
strong
2020-04-25
LucianoBestia
none, low
rand is de facto standard random library for Rust.

The standard libraries are meant to be trusted.

It contains crates: rand_core, rand_hc, rand_chacha, rand_pcg and others.

The crate comes from:

https://github.com/rust-random/rand
rand_core 0.5.1
strong
2020-04-25
LucianoBestia
none, low
rand is de facto standard random library for Rust.

The standard libraries are meant to be trusted.

It contains crates: rand_core, rand_hc, rand_chacha, rand_pcg and others.

The crate comes from:

https://github.com/rust-random/rand
rand_hc 0.2.0
strong
2020-04-25
LucianoBestia
none, low
rand is de facto standard random library for Rust.

The standard libraries are meant to be trusted.

It contains crates: rand_core, rand_hc, rand_chacha, rand_pcg and others.

The crate comes from:

https://github.com/rust-random/rand
rand_pcg 0.2.1
strong
2020-04-25
LucianoBestia
none, low
rand is de facto standard random library for Rust.

The standard libraries are meant to be trusted.

It contains crates: rand_core, rand_hc, rand_chacha, rand_pcg and others.

The crate comes from:

https://github.com/rust-random/rand
reader_for_microxml 1.1.11
strong
2020-06-11
LucianoBestia
high, high
I am the author of reader_for_microxml.

It is no_std, has NO dependency, NO allocation, NO unsafe

Super simple and fast reader/tokenizer.

I think it can be trusted.

Possible improvements:

It can be faster if using [u8] instead of String.

reader_for_microxml 1.1.10
strong
2020-06-04
LucianoBestia
high, high
I am the author of reader_for_microxml.

It is no_std, has NO dependency, NO allocation, NO unsafe

Super simple and fast reader/tokenizer.

I think it can be trusted.

Possible improvements:

It can be faster if using [u8] instead of String.

reader_for_microxml 1.1.7
positive
2020-06-04
LucianoBestia
low, medium
I am the author of reader_for_microxml.

It is no_std, has NO dependency, NO allocation, NO unsafe

Super simple and fast reader/tokenizer.

I think it can be trusted.

Possible improvements:

It can be faster if using [u8] instead of String.

reader_for_microxml 1.1.6
strong
2020-05-30
LucianoBestia
high, high
I am the author of reader_for_microxml.

It is no_std, has NO dependency, NO allocation, NO unsafe

Super simple and fast reader/tokenizer.

I think it can be trusted.

reader_for_microxml 1.0.4
strong
2020-05-30
LucianoBestia
high, high
My reviews are more about the trust in a crate or author.

The quality of the code or compare with alternatives is secondary.

I am the author of reader_for_microxml.

It is no_std, has NO dependency, NO allocation, NO unsafe

Super simple and fast reader/tokenizer.

I assert it can be trusted.

reader_for_microxml 1.0.3
strong
2020-05-30
LucianoBestia
high, high
I am the author of reader_for_microxml.

It is no_std, has NO dependency, NO allocation, NO unsafe

Super simple and fast reader/tokenizer.

I think it can be trusted.

regex 1.3.7
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

regex is the absolute basic core crate for rust.

The crate comes from the

The Rust Project Developers,
regex-syntax 0.6.17
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

regex-syntax is the absolute basic core crate for rust.

The crate comes from the

The Rust Project Developers,
rust_wasm_dodrio_router 0.5.2
strong
2021-01-15
LucianoBestia
high, high
I am the author of rust_wasm_dodrio_router 0.5.2.

This is just one RouterTrait to use with dodrio vdom in wasm.

It does not contain any code to access files,network or unsafe memory or C libraries.

maintainers/authors: Luciano Bestia

used in my project: https://github.com/LucianoBestia/unforgettable7_game

security: unsafe:0 FFI:0 asm!:0 file-read:0 file-write:0 network-access:0

build.rs:0 macro_rules:0 proc_macro:0

alternatives explored: 0

rust_wasm_dodrio_router 0.4.6
strong
2020-06-13
LucianoBestia
high, high
I am the author of rust_wasm_dodrio_router.

It works in wasm. That should be safe.

I think it can be trusted.

rust_wasm_websys_utils 0.4.3
strong
2020-04-26
LucianoBestia
high, high
I am the author of this crate.

I trust it.

rust_wasm_websys_utils 0.4.2
strong
2020-06-13
LucianoBestia
high, high
I am the author of rust_wasm_websys_utils.

It works in wasm. That is safe.

These are small functions, that help coding in wasm.

I think it can be trusted.

ryu 1.0.4
strong
2020-04-26
LucianoBestia
none, low
ryu is written by dtolnay.

I trust dtolnay for the basic library quote rust macros.

He is a member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/dtolnay/quote
ryu 1.0.3
strong
2020-04-25
LucianoBestia
none, low
ryu is written by dtolnay.

I trust dtolnay for the basic library quote rust macros.

He is a member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/dtolnay/quote
ryu 1.0.0
strong
2020-04-25
LucianoBestia
none, low
ryu is written by dtolnay.

I trust dtolnay for the basic library quote rust macros.

He is a prominent member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/dtolnay/quote
scoped-tls 1.0.0
strong
2020-04-25
LucianoBestia
none, low
scoped-tls is written by alexcrichton.

I trust alexcrichton for the basic libraries for rust.

He is a prominent member of rust-lang and rust nursery teams and more.

The crate comes from:

https://github.com/alexcrichton
serde 1.0.106
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

serde is the de facto standard for serialization in rust.

The crate comes from:
https://serde.rs/
https://github.com/serde-rs

serde_derive 1.0.101
strong
2020-04-25
LucianoBestia
none, low
serde is de facto standard serialization library for Rust.

The standard libraries are meant to be trusted.

dtolnay is a prominent member.

He is a prominent member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/serde-rs
serde_json 1.0.51
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

serde-json is the de facto standard for serialization in rust.

The crate comes from:
https://serde.rs/
https://github.com/serde-rs

serde_json 1.0.40
strong
2020-04-25
LucianoBestia
none, low
serde is de facto standard serialization library for Rust.

The standard libraries are meant to be trusted.

dtolnay is a prominent member.

He is a prominent member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/serde-rs
syn 1.0.18
strong
2020-04-26
LucianoBestia
none, low
itoa is written by dtolnay.

I trust dtolnay for the basic library quote rust macros.

He is a prominent member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/dtolnay
syn 1.0.17
strong
2020-04-25
LucianoBestia
none, low
itoa is written by dtolnay.

I trust dtolnay for the basic library quote rust macros.

He is a prominent member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/dtolnay
syn 1.0.5
strong
2020-04-25
LucianoBestia
none, low
ryu is written by dtolnay.

I trust dtolnay for the basic library quote rust macros.

He is a prominent member of the rust-lang, serde-rs and rust nursery teams.

The crate comes from:

https://github.com/dtolnay
unicode-width 0.1.7
strong
2020-04-25
LucianoBestia
none, low
unicode-width is part of the unicode-rs.github.io.

I suppose, this is a very low and basic library for rust.

One member is Manishearth, that works on servo at mozilla and the rustlang core team.

And I suppose I have to trust it.

The crate comes from:

https://github.com/unicode-rs
unicode-width 0.1.6
strong
2020-04-25
LucianoBestia
none, low
unicode-width is part of the unicode-rs.github.io.

I suppose, this is a very low and basic library for rust.

One member is Manishearth, that works on servo at mozilla and the rustlang core team.

And I suppose I have to trust it.

The crate comes from:

https://github.com/unicode-rs
unicode-xid 0.2.0
strong
2020-04-25
LucianoBestia
none, low
unicode-xid is part of the unicode-rs.github.io.

I suppose, this is a very low and basic library for rust.

One member is Manishearth, that works on servo at mozilla and the rustlang core team.

And I suppose I have to trust it.

The crate comes from:

https://github.com/unicode-rs

wasi 0.9.0+wasi-snapshot-preview1
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasi is the absolute basic core crate for rust + wasm.

The crate comes from the

The Rust Project Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
wasm-bindgen 0.2.60
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasm-bindgen is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
wasm-bindgen-backend 0.2.60
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasm-bindgen-backend is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
wasm-bindgen-futures 0.4.10
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasm-bindgen-futures is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
wasm-bindgen-macro 0.2.60
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasm-bindgen-macro is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
wasm-bindgen-macro-support 0.2.60
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasm-bindgen-macro-support is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
wasm-bindgen-shared 0.2.60
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasm-bindgen-shared is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
wasm-bindgen-test 0.3.10
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasm-bindgen-test is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
wasm-bindgen-test-macro 0.3.10
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

wasm-bindgen-test-macro is the absolute basic core crate for rust + wasm.

The crate comes from the

The Rust Project Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io
web-sys 0.3.37
strong
2020-04-25
LucianoBestia
none, low
MUST TRUST !

web-sys is the absolute basic core crate for rust + wasm.

The crate comes from the

wasm-bindgen Developers,
Rust and WebAssembly Working Group,
rustwasm organization,
https://github.com/rustwasm
https://rustwasm.github.io